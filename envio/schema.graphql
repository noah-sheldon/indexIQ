type FiatTokenV2_2_Approval {
  id: ID!
  owner: String!
  spender: String!
  value: BigInt!
}

type FiatTokenV2_2_AuthorizationCanceled {
  id: ID!
  authorizer: String!
  nonce: String!
}

type FiatTokenV2_2_AuthorizationUsed {
  id: ID!
  authorizer: String!
  nonce: String!
}

type FiatTokenV2_2_Blacklisted {
  id: ID!
  _account: String!
}

type FiatTokenV2_2_BlacklisterChanged {
  id: ID!
  newBlacklister: String!
}

type FiatTokenV2_2_Burn {
  id: ID!
  burner: String!
  amount: BigInt!
}

type FiatTokenV2_2_MasterMinterChanged {
  id: ID!
  newMasterMinter: String!
}

type FiatTokenV2_2_Mint {
  id: ID!
  minter: String!
  to: String!
  amount: BigInt!
}

type FiatTokenV2_2_MinterConfigured {
  id: ID!
  minter: String!
  minterAllowedAmount: BigInt!
}

type FiatTokenV2_2_MinterRemoved {
  id: ID!
  oldMinter: String!
}

type FiatTokenV2_2_OwnershipTransferred {
  id: ID!
  previousOwner: String!
  newOwner: String!
}

type FiatTokenV2_2_Pause {
  id: ID!
}

type FiatTokenV2_2_PauserChanged {
  id: ID!
  newAddress: String!
}

type FiatTokenV2_2_RescuerChanged {
  id: ID!
  newRescuer: String!
}

type FiatTokenV2_2_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type FiatTokenV2_2_UnBlacklisted {
  id: ID!
  _account: String!
}

type FiatTokenV2_2_Unpause {
  id: ID!
}

type TetherToken_AddedBlackList {
  id: ID!
  _user: String!
}

type TetherToken_Approval {
  id: ID!
  owner: String!
  spender: String!
  value: BigInt!
}

type TetherToken_Deprecate {
  id: ID!
  newAddress: String!
}

type TetherToken_DestroyedBlackFunds {
  id: ID!
  _blackListedUser: String!
  _balance: BigInt!
}

type TetherToken_Issue {
  id: ID!
  amount: BigInt!
}

type TetherToken_Params {
  id: ID!
  feeBasisPoints: BigInt!
  maxFee: BigInt!
}

type TetherToken_Pause {
  id: ID!
}

type TetherToken_Redeem {
  id: ID!
  amount: BigInt!
}

type TetherToken_RemovedBlackList {
  id: ID!
  _user: String!
}

type TetherToken_Transfer {
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type TetherToken_Unpause {
  id: ID!
}

